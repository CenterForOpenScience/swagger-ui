# /nodes/{node_id}/comments/
get:
  summary: List all comments
  description: >-

    Paginated list of comments ordered by their date_created.

    ####Permissions

    Comments on public nodes are given read-only access to everyone.
    If the node comment-level is "private", only contributors have permission to
    comment. If the comment-level is "public" any logged-in OSF user can comment.
    Comments on private nodes are only visible to contributors and administrators
    on the parent node.

    ####Returns

    Returns a JSON object containing `data` and `links` keys.


    The `data` key contains an array of comment objects.
    Each resource in the array is a separate comment object and contains the
    full representation of the comment, meaning additional requests to a comment's detail view are not necessary.


    The `links` key contains a dictionary of links that can be used for [pagination](#Introduction_pagination).

    #### Filtering

    You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g.
    https://api.osf.io/v2/nodes/?filter[title]=reproducibility

    Nodes may be filtered by their `deleted`, `target_id`, `date_created`, `date_modified`.

    Most fields are string fields and will be filtered using simple substring matching.
    Public and preprint are boolean fields, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**.
    Note that quoting true or false in the query will cause the match to fail.

  parameters:
    - in: path
      type: string
      name: node_id
      required: true
      description: 'The unique identifier of the node.'

  tags:
    - Nodes
  operationId: nodes_comments_list
  x-response-schema: 'Comment'
  responses:
    '200':
      description: OK
      schema:
        type: array
        items:
          $ref: '../comments/definition.yaml'
      examples:
        application/json:
          data:
          - relationships:
              node:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/<node_id>/
                    meta: {}
              replies:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/api6f/comments/?filter[deleted]=True
                    meta: {}
              target:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/<node_id>/
                    meta:
                      type: nodes
              reports:
                links:
                  related:
                    href: https://api.osf.io/v2/comments/<comment_id>/reports/
                    meta: {}
              user:
                links:
                  related:
                    href: https://api.osf.io/v2/users/<user_id>/
                    meta: {}
            links:
              self: https://api.osf.io/v2/comments/<comment_id>/
            attributes:
              can_edit: false
              date_modified: '2016-08-11T22:58:53.694000'
              deleted: false
              is_ham: false
              has_children: false
              modified: false
              content: "hello world\r\n"
              has_report: false
              is_abuse: false
              date_created: '2016-08-11T22:58:53.666000'
              page: node
            type: comments
            id: <comment_id>
          links:
            first: null
            last: null
            prev: null
            next: null
            meta: null
              total: 1
              per_page: 10
