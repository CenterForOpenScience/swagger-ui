# /nodes/
get:
  summary: List all nodes
  description: >-
    Nodes that represent projects and components. *Writeable*.


    Paginated list of nodes ordered by their `date_modified`.  Each resource
    contains the full representation of the

    node, meaning additional requests to an individual node's detail view
    are not necessary.  Registrations and withdrawn

    registrations cannot be accessed through this endpoint (see registration
    endpoints instead).


    <!--- Copied Spiel from NodeDetail -->


    On the front end, nodes are considered 'projects' or 'components'. The
    difference between a project and a component

    is that a project is the top-level node, and components are children of
    the project. There is also a [category

    field](/v2/#osf-node-categories) that includes 'project' as an option.
    The categorization essentially determines

    which icon is displayed by the node in the front-end UI and helps with
    search organization. Top-level nodes may have

    a category other than project, and children nodes may have a category of
    project.


    ##Node Attributes


    <!--- Copied Attributes from NodeDetail -->


    OSF Node entities have the "nodes" `type`.


    name                            type               description

    =================================================================================

    title                           string             title of project or
    component

    description                     string             description of the
    node

    category                        string             node category, must
    be one of the allowed values

    date_created                    iso8601 timestamp  timestamp that the
    node was created

    date_modified                   iso8601 timestamp  timestamp when the
    node was last updated

    tags                            array of strings   list of tags that
    describe the node

    current_user_can_comment        boolean            Whether the current
    user is allowed to post comments

    current_user_permissions        array of strings   list of strings
    representing the permissions for the current user on this node

    registration                    boolean            is this a
    registration? (always false - may be deprecated in future versions)

    fork                            boolean            is this node a fork
    of another node?

    public                          boolean            has this node been
    made publicly-visible?

    preprint                        boolean            is this a preprint?

    collection                      boolean            is this a collection?
    (always false - may be deprecated in future versions)

    node_license                    object             details of the
    license applied to the node

    year                        string             date range of the license

    copyright_holders           array of strings   holders of the applied
    license


    ##Links


    See the [JSON-API spec regarding
    pagination](http://jsonapi.org/format/1.0/#fetching-pagination).


    ##Actions


    ###Creating New Nodes
  tags:
    - Nodes
  operationId: nodes_list
  responses:
    '200':
      description: OK
      schema:
        type: array
        items:
          $ref: 'definition.yaml'
      examples:
        application/json:
          data:
          - relationships:
              files:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/files/
                    meta: {}
              view_only_links:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/view_only_links/
                    meta: {}
              citation:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/citation/
                    meta: {}
              draft_registrations:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/draft_registrations/
                    meta: {}
              contributors:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/contributors/
                    meta: {}
              forks:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/forks/
                    meta: {}
              root:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/
                    meta: {}
              identifiers:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/identifiers/
                    meta: {}
              comments:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=ezcuj
                    meta: {}
              registrations:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/registrations/
                    meta: {}
              node_links:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/node_links/
                    meta: {}
              linked_nodes:
                links:
                  self:
                    href: https://api.osf.io/v2/nodes/ezcuj/relationships/linked_nodes/
                    meta: {}
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/linked_nodes/
                    meta: {}
              wikis:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/wikis/
                    meta: {}
              affiliated_institutions:
                links:
                  self:
                    href: https://api.osf.io/v2/nodes/ezcuj/relationships/institutions/
                    meta: {}
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/institutions/
                    meta: {}
              children:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/children/
                    meta: {}
              preprints:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/preprints/
                    meta: {}
              logs:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/ezcuj/logs/
                    meta: {}
            links:
              self: https://api.osf.io/v2/nodes/ezcuj/
              html: https://osf.io/ezcuj/
            attributes:
              category: project
              fork: false
              preprint: false
              description: ''
              current_user_permissions:
              - read
              date_modified: '2016-12-08T21:45:17.058000'
              title: 'Reproducibility Project: Psychology'
              collection: false
              registration: false
              date_created: '2012-04-01T15:49:07.702000'
              current_user_can_comment: true
              node_license:
              public: true
              tags:
              - replication
              - reproducibility
              - open science
              - reproduction
              - psychological science
              - psychology
              - metascience
              - crowdsource
            type: nodes
            id: ezcuj
          links:
            first:
            last: https://api.osf.io/v2/nodes/?page=1954
            prev:
            next: https://api.osf.io/v2/nodes/?page=2
            meta:
              total: 19536
              per_page: 10


post:
  summary: Create a node
  description: >-
    Nodes that represent projects and components. *Writeable*.


    Paginated list of nodes ordered by their `date_modified`.  Each resource
    contains the full representation of the

    node, meaning additional requests to an individual node's detail view
    are not necessary.  Registrations and withdrawn

    registrations cannot be accessed through this endpoint (see registration
    endpoints instead).


    <!--- Copied Spiel from NodeDetail -->


    On the front end, nodes are considered 'projects' or 'components'. The
    difference between a project and a component

    is that a project is the top-level node, and components are children of
    the project. There is also a [category

    field](/v2/#osf-node-categories) that includes 'project' as an option.
    The categorization essentially determines

    which icon is displayed by the node in the front-end UI and helps with
    search organization. Top-level nodes may have

    a category other than project, and children nodes may have a category of
    project.


    ##Node Attributes


    <!--- Copied Attributes from NodeDetail -->


    OSF Node entities have the "nodes" `type`.


    name                            type               description

    =================================================================================

    title                           string             title of project or
    component

    description                     string             description of the
    node

    category                        string             node category, must
    be one of the allowed values

    date_created                    iso8601 timestamp  timestamp that the
    node was created

    date_modified                   iso8601 timestamp  timestamp when the
    node was last updated

    tags                            array of strings   list of tags that
    describe the node

    current_user_can_comment        boolean            Whether the current
    user is allowed to post comments

    current_user_permissions        array of strings   list of strings
    representing the permissions for the current user on this node

    registration                    boolean            is this a
    registration? (always false - may be deprecated in future versions)

    fork                            boolean            is this node a fork
    of another node?

    public                          boolean            has this node been
    made publicly-visible?

    preprint                        boolean            is this a preprint?

    collection                      boolean            is this a collection?
    (always false - may be deprecated in future versions)

    node_license                    object             details of the
    license applied to the node

    year                        string             date range of the license

    copyright_holders           array of strings   holders of the applied
    license


    ##Links


    See the [JSON-API spec regarding
    pagination](http://jsonapi.org/format/1.0/#fetching-pagination).


    ##Actions


    ###Creating New Nodes
  parameters:
    - in: body
      name: data
      required: true
      schema:
        $ref: 'definition.yaml'
  tags:
    - Nodes
  operationId: nodes_create
  consumes:
    - application/json
  responses:
    '201':
      description: 'Success'
