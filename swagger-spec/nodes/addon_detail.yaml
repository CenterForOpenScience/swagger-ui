# /nodes/{node_id}/addons/{provider}/
get:
  summary: Retrieve an addon
  description: >-
    Retrieve details of an individual addon connected to this node.

    #### Permissions

    NodeSettings that are attached to public Nodes will give read-only access to everyone.
    Private nodes require explicit read permission. Write and admin access are the same for public and private nodes.
    Administrators on a parent node have implicit read permissions for all child nodes.

    Any users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.

    #### Returns

    Returns a JSON object with a `data` key containing the details of the requested
    addon, if the request is successful.


    If the request is unsuccessful, an `errors` key containing
    information about the failure will be returned. Refer to the [list of error codes](#Introduction_error_codes)
    to understand why this request may have failed.

  parameters:
    - in: path
      type: string
      name: node_id
      required: true
      description: 'The unique identifier of the node.'
    - in: path
      type: string
      name: provider
      required: true
      description: 'The unique identifier/name of the provider'
  tags:
    - Nodes
  operationId: nodes_addon_read
  x-response-schema: 'Addon'
  responses:
    '200':
      description: 'OK'
      schema:
        $ref: '../addons/definition.yaml'
      examples:
        application/json:
          data:
            links:
              self: http://api.osf.io/v2/nodes/gaz5n/addons/box/
            attributes:
              folder_path: null
              configured: false
              external_account_id: null
              folder_id: null
              node_has_auth: false
            type: node_addons
            id: box
