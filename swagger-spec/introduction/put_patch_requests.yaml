get:
  summary: Create/Update Requests
  description: >-
    #### Formatting POST/PUT/PATCH Request Bodies

    The OSF API follows the JSON-API spec for [create and update requests](http://jsonapi.org/format/1.0/#crud).
    This means all request bodies must be wrapped with some metadata.


    Each request body must be an object with a `data` key containing at least a `type` member.
    The value of the `type` member must agree with the `type` of the entities represented by the endpoint.
    If not, a **409 Conflict** will be returned.


    The request should also contain an `attributes` member with an object containing the key-value pairs to be created/updated.


    **PUT/PATCH** requests must also have an `id` key that matches the ID part of the endpoint you are making a request to.
    If the `id` key does not match the ID part of the URL path, a **409 Conflict** error will be returned.


    #### Creating a Node via POST Example

        POST /v2/nodes/
        {
          "data": {
            "type": "nodes",
            "attributes": {
              "title" : "A Phylogenetic Tree of Famous Internet Cats",
              "category" : "project",
              "description" : "How closely related are Grumpy Cat and C.H. Cheezburger? Is memefulness inheritable?"
            }
          }
        }


    #### Updating a User via PUT Example

        PUT /v2/users/me/
        {
          "data": {
            "id": "3rqxc",
            "type": "users",
            "attributes": {
              "full_name" : "Henrietta Swan Leavitt",
              "given_name" : "Henrietta",
              "middle_names" : "Swan",
              "family_name" : "Leavitt"
            }
          }
        }

    **Note:** If you PUT/PATCH to the `/users/me/` endpoint, you must still provide your full user id in the `id` field of the request.  We do not support using the `me` alias in request bodies at this time.


    #### PUT vs. PATCH

    For most endpoints that support updates via **PUT** requests, we also allow **PATCH** updates.


    **PUT** requests require all mandatory attributes to be set, even if their value is unchanged.
    **PATCH** requests may omit mandatory attributes, whose value will be unchanged.

  operationId: create_update_requests
  tags:
    - Introduction
  responses:
    '200':
      description: OK
