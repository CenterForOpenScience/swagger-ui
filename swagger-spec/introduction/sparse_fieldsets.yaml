get:
  summary: Sparse Fieldsets
  description: |
    All endpoints respond to the `fields` query parameter as described in the [JSON-API spec](http://jsonapi.org/format/#fetching-sparse-fieldsets).


    From the specification:

    <blockquote>
      <p>A client MAY request that an endpoint return only specific fields in the response on a per-type basis by including a fields[TYPE] parameter.</p>
      <p>The value of the fields parameter MUST be a comma-separated (U+002C COMMA, “,”) list that refers to the name(s) of the fields to be returned.</p>
      <p>If a client requests a restricted set of fields for a given resource type, an endpoint MUST NOT include additional fields in resource objects of that type in its response.</p>
    </blockquote>

    #### Basic Usage

    When making a request to an endpoint that returns a serialized object of some `type`, you can specify `fields[<type>]=<comma,separated,list,of,fields>` to receive a subset of the object's fields in the response.


    For example, the request below will serialize only the `title` attribute and `children` relationship for each node in the response.


    https://api.osf.io/v2/nodes/?fields[nodes]=title,children


    Sparse fieldsets can be used to restrict both attribute and relationship fields.
    Note that top-level objects (such as `type`, `id`, `attributes`, `relationships`, and `links`) will always be serialized and cannot be excluded.

    #### Advanced Usage

    Sparse fieldsets can be used to restrict any entity returned in the response.


    For example, the request below will serialize only the `full_name` attribute for each user (auto-embedded by the `embed=contributors` query parameter), and the `title` attribute for each node.


    https://api.osf.io/v2/nodes/?fields[nodes]=title,contributors&embed=contributors&fields[users]=full_name


    Any field specified in another query parameters used by the serializer (e.g. `embed`) must also be included in the sparse fieldset.
    For example, fields that are being embedded on the sparse type (e.g. `nodes`) must also be included in `fields[<type>]` when using embeds, or the embed will be invalid.


    A request to embed contributors and restrict nodes to only return the `title` attribute should have the form:


    https://api.osf.io/v2/nodes/?embed=contributors&fields[nodes]=title,contributors


    **NOT**


    https://api.osf.io/v2/nodes/?embed=contributors&fields[nodes]=title

  operationId: sparse_fieldsets
  tags:
    - Introduction
  responses:
    '200':
      description: OK
