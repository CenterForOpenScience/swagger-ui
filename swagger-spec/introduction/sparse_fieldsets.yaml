get:
  summary: Sparse Fieldsets
  description: >-
    All endpoints respond to the `fields` query parameter as described in the [JSON-API spec](http://jsonapi.org/format/#fetching-sparse-fieldsets).

    #### Basic Usage

    When making a request to an endpoint that returns a serialized object of some `type`, you can specify `fields[<type>]=<comma,separated,list,of,fields>` to receive a subset of the object's fields in the response.


    For example, the request below will serialize only the `title` attribute and `children` relationship for each node in the response.


    https://api.osf.io/v2/nodes/?fields[nodes]=title,children


    Sparse fieldsets can be used to restrict both attribute and relationship fields.
    Note that top-level objects (such as `type`, `id`, `attributes`, `relationships`, and `links`) will always be serialized and cannot be excluded.

    #### Advanced Usage

    Sparse fieldsets can be used to restrict any entity returned in the response.


    For example, the request below will serialize only the `full_name` attribute for each user (auto-embedded by the `embed=contributors` query parameter), and the `title` attribute for each node.


    https://api.osf.io/v2/nodes/?fields[nodes]=title,contributors&embed=contributors&fields[users]=full_name


    When using sparse fieldsets and embeds in the same request, fields that are being embedded must also be included in `fields[type]`, or the embed will be invalid.


    A request to embed contributors and restrict nodes to only return the `title` attribute should have the form:


    https://api.osf.io/v2/nodes/?embed=contributors&fields[nodes]=title,contributors


    **NOT**


    https://api.osf.io/v2/nodes/?embed=contributors&fields[nodes]=title

  operationId: sparse_fieldsets
  tags:
    - Introduction
  responses:
    '200':
      description: OK
