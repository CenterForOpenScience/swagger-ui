get:
  summary: Versioning
  description: >-
    Versioning can be specified in three different ways:


    #### URL Path Versioning

    + `/v2/` or `/v3/`

    + A version specified via the URL path is a **required** part of the
    URL.

    + Only a major version can be specified via the URL path, i.e.
    `/v2.0.6/` is invalid, additionally, paths such as `/v2.0/` are invalid.

    + If the default version of the API is within the major version
    specified in the URL path, the default version will be applied (i.e. if
    the default version is `2.3` and the URL path is `/v2/`, then version
    returned will be `2.3`).

    + If the default version of the API is not within the major version
    specified in the URL path, the URL path version will be applied (i.e. if
    the default version is `3.0` and the URL path is `/v2/`, then the
    version returned will be `2.0`)


    #### Query Parameter Versioning

    + `/v2/nodes/?version=2.1.6`

    + Pinning to a specific version via a query parameter is **optional**.

    + A specific version (major, minor, or patch) for a single request can
    be specified via the `version` query parameter, as long as it is an
    allowed version.

    + If the version specified in the query parameter does not fall within
    the same major version specified in the URL path, i.e
    `/v2/nodes/?version=3.1.4` a 409 Conflict response will be returned.


    #### Header Versioning

    + `Accept-Header=application/vnd.api+json;version=3.0.1`

    + Pinning to a specific version via request header is **optional**.

    + A specific version (major, minor, or patch) for a single request can
    be specified via the `Accept Header` of the request, as long as it is an
    allowed version.

    + If the version specified in the header does not fall within the same
    major version specified in the URL path a 409 Conflict response will be
    returned.

    + If both a header version and query parameter version are specified,
    the versions must match exactly or a 409 Conflict response will be
    returned (i.e. one does not take precedence over the other).


    #### CHANGELOG

    `v2.1`

    + Pagination links conform to JSON API specification, i.e. `meta` information was pulled out of the `links` object and placed in a top-level `meta` object.

    + Deprecate the `node_links` field in the **Node** and **Registration** serializers in favor of `linked_nodes` and `linked_registrations`.


    `v2.2`

    + Modify institution nodes list so that affiliated components are also returned from `/v2/institutions/<id>/nodes/`.

    + Ensure all existing date fields are standardized on UTC.


    `v2.3`

    + Handle merged users more correctly on `/v2/users/`.


    `v2.4`

    + Deprecate the `parents` field in the **Taxonomies** serializer.

    + Deprecate the following fields in the **Preprint Provider** serializer:
        + `social_facebook`, `social_instagram`, and `social_twitter`
        + `banner_path`, `logo_path`, and `header_text`
        + `email_contact`


  operationId: versioning
  tags:
    - Introduction
  responses:
    '200':
      description: OK
