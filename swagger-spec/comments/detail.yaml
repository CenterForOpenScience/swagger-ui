# /comments/{comment_id}/
get:
  summary: Retrieve a comment
  description: >-
    Retrieves the details of a single comment. Comments are associated with a node. A GET request 
    to `/nodes/<node_id>/comments/` will return a paginated list of all comments associated with that node.
    Comments also have a `target` that defines what part of the node the comment is connected.
    Targets can be the node itself, a file on a node, a node wiki (so long as the wiki has content), or another comment (a comment reply).
    Comments are created through a POST request to the `/nodes/<node_id>/comments/` route and not through `/comments/`. 


    Registrations are a special instance of a node and also support comments via `/registrations/<registration_id>/comments/`.

  parameters:
    - description: ''
      required: true
      type: string
      name: comment_id
      in: path
  tags:
    - Comments
  operationId: comments_read
  responses:
    '200':
      description: 'OK'
      schema:
        $ref: 'definition.yaml'
      examples:
        application/json:
          data:
            - relationships:
                node:
                  links:
                    related:
                      href: https://api.osf.io/v2/nodes/gvuew/
                      meta: {}
                replies:
                  links:
                    related:
                      href: https://api.osf.io/v2/nodes/gvuew/comments/?filter%5Btarget%5D=twpgrpv78d8s
                      meta: {}
                target:
                  links:
                    related:
                      href: https://api.osf.io/v2/nodes/gvuew/
                      meta:
                        type: nodes
                reports:
                  links:
                    related:
                      href: https://api.osf.io/v2/comments/twpgrpv78d8s/reports/
                      meta: {}
                user:
                  links:
                    related:
                      href: https://api.osf.io/v2/users/rnizy/
                      meta: {}
              links:
                self: https://api.osf.io/v2/comments/twpgrpv78d8s/
              attributes:
                can_edit: true
                date_modified: '2017-02-10T20:44:03.193000'
                deleted: false
                is_ham: false
                has_children: false
                modified: false
                content: "comments\r\n\r\n"
                has_report: false
                is_abuse: false
                date_created: '2017-02-10T20:44:03.185000'
                page: node
              type: comments
              id: twpgrpv78d8s

put:
  summary: Delete a comment
  description: >-
    Delete a comment.

  parameters:
    - description: ''
      required: true
      type: string
      name: comment_id
      in: path
  tags:
    - Comments
  operationId: comments_put
  responses:
    '200':
      description: 'OK'
      schema:
        $ref: 'definition.yaml'
      examples:
        application/json:
          data:
          type: comments
          id: twpgrpv78d8s
          attributes:
            content: "changed comment content"

delete:
  summary: Modify a comment
  description: >-
    Modify the contents of a comment.

  parameters:
    - description: ''
      required: true
      type: string
      name: comment_id
      in: path
  tags:
    - Comments
  operationId: comments_delete
  responses:
    '204':
      description: 'OK'
      schema:
        $ref: 'definition.yaml'
      examples:
        application/json:
          data:
          type: comments
          id: twpgrpv78d8s
